name: Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop, staging, epic/* ]

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Prepare Laravel Application Environment
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute Code Style Checker
        run: vendor/bin/pint --test

      - name: Execute Static Analysis
        run: composer run-script stan

#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: '16'
#          check-latest: true
#
#      - name: Cache NPM
#        uses: actions/cache@v2
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install NPM dependencies
#        run: npm ci
#
#      - name: Compile assets for testing
#        run: npm run build

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_DRIVER: sync
        #        run: vendor/bin/phpunit
        run: php artisan test --parallel

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
